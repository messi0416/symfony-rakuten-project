{"version":3,"sources":["../src/db.js"],"names":["local","isObject","item","_typeof","mongoDBToKeyRangeArgs","opts","keys","Object","sort","length","key","val","name","inclusive","TypeError","x","y","pattern","mongoifyKey","IDBKeyRange","type","_mongoDBToKeyRangeArg2","apply","_toConsumableArray","args","webkitIDBKeyRange","transactionModes","readonly","readwrite","hasOwn","prototype","hasOwnProperty","indexedDB","webkitIndexedDB","mozIndexedDB","oIndexedDB","msIndexedDB","shimIndexedDB","Error","dbCache","runQuery","cursorType","direction","limitRange","filters","mapper","Promise","resolve","reject","keyRange","e","results","counter","transaction","db","table","modifyObj","onerror","onabort","oncomplete","store","objectStore","indexArgs","push","modifyRecord","record","modifyKeys","forEach","cursor","target","result","advance","_ret","matchFilter","filter","err","v","update","Query","queuedError","defaultMapper","unique","execute","error","count","desc","distinct","limit","map","start","end","some","modify","prop","fn","_this","arguments","this","range","undefined","concat","query","all","closed","index","IndexQuery","_key","records","reduce","aip","preventDefault","req","call","add","onsuccess","keyPath","source","defineProperty","value","enumerable","_key2","put","remove","clear","close","version","get","addEventListener","eventName","handler","serverEvents","includes","removeEventListener","evName","noServerMethods","objectStoreNames","storeName","_this2","createSchema","request","schema","server","i","deleteObjectStore","ret","tableName","contains","createObjectStore","indexes","indexKey","createIndex","err2","_open","s","Server","open","options","then","_ret2","onupgradeneeded","onblocked","ev","res","rej","resume","delete","dbName","newVersion","Proxy","oldVersion","cmp","param1","param2","module","exports","define","amd"],"mappings":"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","file":"db.min.js","sourcesContent":["(function (local) {\r\n    'use strict';\r\n\r\n    const IDBKeyRange = local.IDBKeyRange || local.webkitIDBKeyRange;\r\n    const transactionModes = {\r\n        readonly: 'readonly',\r\n        readwrite: 'readwrite'\r\n    };\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n    const defaultMapper = x => x;\r\n\r\n    const indexedDB = local.indexedDB || local.webkitIndexedDB ||\r\n        local.mozIndexedDB || local.oIndexedDB || local.msIndexedDB ||\r\n        local.shimIndexedDB || (function () {\r\n            throw new Error('IndexedDB required');\r\n        }());\r\n\r\n    const dbCache = {};\r\n    const serverEvents = ['abort', 'error', 'versionchange'];\r\n\r\n    function isObject (item) {\r\n        return item && typeof item === 'object';\r\n    }\r\n\r\n    function mongoDBToKeyRangeArgs (opts) {\r\n        const keys = Object.keys(opts).sort();\r\n        if (keys.length === 1) {\r\n            const key = keys[0];\r\n            const val = opts[key];\r\n            let name, inclusive;\r\n            switch (key) {\r\n            case 'eq': name = 'only'; break;\r\n            case 'gt':\r\n                name = 'lowerBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'lt':\r\n                name = 'upperBound';\r\n                inclusive = true;\r\n                break;\r\n            case 'gte': name = 'lowerBound'; break;\r\n            case 'lte': name = 'upperBound'; break;\r\n            default: throw new TypeError('`' + key + '` is not a valid key');\r\n            }\r\n            return [name, [val, inclusive]];\r\n        }\r\n        const x = opts[keys[0]];\r\n        const y = opts[keys[1]];\r\n        const pattern = keys.join('-');\r\n\r\n        switch (pattern) {\r\n        case 'gt-lt': case 'gt-lte': case 'gte-lt': case 'gte-lte':\r\n            return ['bound', [x, y, keys[0] === 'gt', keys[1] === 'lt']];\r\n        default: throw new TypeError(\r\n          '`' + pattern + '` are conflicted keys'\r\n        );\r\n        }\r\n    }\r\n    function mongoifyKey (key) {\r\n        if (key && typeof key === 'object' && !(key instanceof IDBKeyRange)) {\r\n            let [type, args] = mongoDBToKeyRangeArgs(key);\r\n            return IDBKeyRange[type](...args);\r\n        }\r\n        return key;\r\n    }\r\n\r\n    const IndexQuery = function (table, db, indexName, preexistingError) {\r\n        let modifyObj = null;\r\n\r\n        const runQuery = function (type, args, cursorType, direction, limitRange, filters, mapper) {\r\n            return new Promise(function (resolve, reject) {\r\n                let keyRange;\r\n                try {\r\n                    keyRange = type ? IDBKeyRange[type](...args) : null;\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n                filters = filters || [];\r\n                limitRange = limitRange || null;\r\n\r\n                let results = [];\r\n                let counter = 0;\r\n                const indexArgs = [keyRange];\r\n\r\n                const transaction = db.transaction(table, modifyObj ? transactionModes.readwrite : transactionModes.readonly);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n                transaction.oncomplete = () => resolve(results);\r\n\r\n                const store = transaction.objectStore(table); // if bad, db.transaction will reject first\r\n                const index = typeof indexName === 'string' ? store.index(indexName) : store;\r\n\r\n                if (cursorType !== 'count') {\r\n                    indexArgs.push(direction || 'next');\r\n                }\r\n\r\n                // Create a function that will set in the modifyObj properties into\r\n                // the passed record.\r\n                const modifyKeys = modifyObj ? Object.keys(modifyObj) : [];\r\n\r\n                const modifyRecord = function (record) {\r\n                    modifyKeys.forEach(key => {\r\n                        let val = modifyObj[key];\r\n                        if (typeof val === 'function') { val = val(record); }\r\n                        record[key] = val;\r\n                    });\r\n                    return record;\r\n                };\r\n\r\n                index[cursorType](...indexArgs).onsuccess = function (e) { // indexArgs are already validated\r\n                    const cursor = e.target.result;\r\n                    if (typeof cursor === 'number') {\r\n                        results = cursor;\r\n                    } else if (cursor) {\r\n                        if (limitRange !== null && limitRange[0] > counter) {\r\n                            counter = limitRange[0];\r\n                            cursor.advance(limitRange[0]); // Will throw on 0, but condition above prevents since counter always 0+\r\n                        } else if (limitRange !== null && counter >= (limitRange[0] + limitRange[1])) {\r\n                            // Out of limit range... skip\r\n                        } else {\r\n                            let matchFilter = true;\r\n                            let result = 'value' in cursor ? cursor.value : cursor.key;\r\n\r\n                            try {\r\n                                filters.forEach(function (filter) {\r\n                                    if (typeof filter[0] === 'function') {\r\n                                        matchFilter = matchFilter && filter[0](result);\r\n                                    } else {\r\n                                        matchFilter = matchFilter && (result[filter[0]] === filter[1]);\r\n                                    }\r\n                                });\r\n                            } catch (err) { // Could be filter on non-object or error in filter function\r\n                                reject(err);\r\n                                return;\r\n                            }\r\n\r\n                            if (matchFilter) {\r\n                                counter++;\r\n                                // If we're doing a modify, run it now\r\n                                if (modifyObj) {\r\n                                    try {\r\n                                        result = modifyRecord(result);\r\n                                        cursor.update(result); // `result` should only be a \"structured clone\"-able object\r\n                                    } catch (err) {\r\n                                        reject(err);\r\n                                        return;\r\n                                    }\r\n                                }\r\n                                try {\r\n                                    results.push(mapper(result));\r\n                                } catch (err) {\r\n                                    reject(err);\r\n                                    return;\r\n                                }\r\n                            }\r\n                            cursor.continue();\r\n                        }\r\n                    }\r\n                };\r\n            });\r\n        };\r\n\r\n        const Query = function (type, args, queuedError) {\r\n            const filters = [];\r\n            let direction = 'next';\r\n            let cursorType = 'openCursor';\r\n            let limitRange = null;\r\n            let mapper = defaultMapper;\r\n            let unique = false;\r\n            let error = preexistingError || queuedError;\r\n\r\n            const execute = function () {\r\n                if (error) {\r\n                    return Promise.reject(error);\r\n                }\r\n                return runQuery(type, args, cursorType, unique ? direction + 'unique' : direction, limitRange, filters, mapper);\r\n            };\r\n\r\n            const count = function () {\r\n                direction = null;\r\n                cursorType = 'count';\r\n\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n\r\n            const keys = function () {\r\n                cursorType = 'openKeyCursor';\r\n\r\n                return {\r\n                    desc,\r\n                    distinct,\r\n                    execute,\r\n                    filter,\r\n                    limit,\r\n                    map\r\n                };\r\n            };\r\n\r\n            const limit = function (start, end) {\r\n                limitRange = !end ? [0, start] : [start, end];\r\n                error = limitRange.some(val => typeof val !== 'number') ? new Error('limit() arguments must be numeric') : error;\r\n\r\n                return {\r\n                    desc,\r\n                    distinct,\r\n                    filter,\r\n                    keys,\r\n                    execute,\r\n                    map,\r\n                    modify\r\n                };\r\n            };\r\n\r\n            const filter = function (prop, val) {\r\n                filters.push([prop, val]);\r\n\r\n                return {\r\n                    desc,\r\n                    distinct,\r\n                    execute,\r\n                    filter,\r\n                    keys,\r\n                    limit,\r\n                    map,\r\n                    modify\r\n                };\r\n            };\r\n\r\n            const desc = function () {\r\n                direction = 'prev';\r\n\r\n                return {\r\n                    distinct,\r\n                    execute,\r\n                    filter,\r\n                    keys,\r\n                    limit,\r\n                    map,\r\n                    modify\r\n                };\r\n            };\r\n\r\n            const distinct = function () {\r\n                unique = true;\r\n                return {\r\n                    count,\r\n                    desc,\r\n                    execute,\r\n                    filter,\r\n                    keys,\r\n                    limit,\r\n                    map,\r\n                    modify\r\n                };\r\n            };\r\n\r\n            const modify = function (update) {\r\n                modifyObj = update && typeof update === 'object' ? update : null;\r\n                return {\r\n                    execute\r\n                };\r\n            };\r\n\r\n            const map = function (fn) {\r\n                mapper = fn;\r\n\r\n                return {\r\n                    count,\r\n                    desc,\r\n                    distinct,\r\n                    execute,\r\n                    filter,\r\n                    keys,\r\n                    limit,\r\n                    modify\r\n                };\r\n            };\r\n\r\n            return {\r\n                count,\r\n                desc,\r\n                distinct,\r\n                execute,\r\n                filter,\r\n                keys,\r\n                limit,\r\n                map,\r\n                modify\r\n            };\r\n        };\r\n\r\n        ['only', 'bound', 'upperBound', 'lowerBound'].forEach((name) => {\r\n            this[name] = function () {\r\n                return Query(name, arguments);\r\n            };\r\n        });\r\n\r\n        this.range = function (opts) {\r\n            let error;\r\n            let keyRange = [null, null];\r\n            try {\r\n                keyRange = mongoDBToKeyRangeArgs(opts);\r\n            } catch (e) {\r\n                error = e;\r\n            }\r\n            return Query(...keyRange, error);\r\n        };\r\n\r\n        this.filter = function (...args) {\r\n            const query = Query(null, null);\r\n            return query.filter(...args);\r\n        };\r\n\r\n        this.all = function () {\r\n            return this.filter();\r\n        };\r\n    };\r\n\r\n    const Server = function (db, name, version, noServerMethods) {\r\n        let closed = false;\r\n\r\n        this.getIndexedDB = () => db;\r\n        this.isClosed = () => closed;\r\n\r\n        this.query = function (table, index) {\r\n            const error = closed ? new Error('Database has been closed') : null;\r\n            return new IndexQuery(table, db, index, error); // Does not throw by itself\r\n        };\r\n\r\n        this.add = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.onerror = e => {\r\n                    // prevent throwing a ConstraintError and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n                transaction.oncomplete = () => resolve(records);\r\n\r\n                const store = transaction.objectStore(table);\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            try {\r\n                                key = mongoifyKey(key);\r\n                            } catch (e) {\r\n                                reject(e);\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    try {\r\n                        // Safe to add since in readwrite\r\n                        if (key != null) {\r\n                            req = store.add(record, key);\r\n                        } else {\r\n                            req = store.add(record);\r\n                        }\r\n                    } catch (e) {\r\n                        reject(e);\r\n                        return true;\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.update = function (table, ...args) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n\r\n                const records = args.reduce(function (records, aip) {\r\n                    return records.concat(aip);\r\n                }, []);\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.onerror = e => {\r\n                    // prevent throwing aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n                transaction.oncomplete = () => resolve(records);\r\n\r\n                const store = transaction.objectStore(table);\r\n\r\n                records.some(function (record) {\r\n                    let req, key;\r\n                    if (isObject(record) && hasOwn.call(record, 'item')) {\r\n                        key = record.key;\r\n                        record = record.item;\r\n                        if (key != null) {\r\n                            try {\r\n                                key = mongoifyKey(key);\r\n                            } catch (e) {\r\n                                reject(e);\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    try {\r\n                        // These can throw DataError, e.g., if function passed in\r\n                        if (key != null) {\r\n                            req = store.put(record, key);\r\n                        } else {\r\n                            req = store.put(record);\r\n                        }\r\n                    } catch (err) {\r\n                        reject(err);\r\n                        return true;\r\n                    }\r\n\r\n                    req.onsuccess = function (e) {\r\n                        if (!isObject(record)) {\r\n                            return;\r\n                        }\r\n                        const target = e.target;\r\n                        let keyPath = target.source.keyPath;\r\n                        if (keyPath === null) {\r\n                            keyPath = '__id__';\r\n                        }\r\n                        if (hasOwn.call(record, keyPath)) {\r\n                            return;\r\n                        }\r\n                        Object.defineProperty(record, keyPath, {\r\n                            value: target.result,\r\n                            enumerable: true\r\n                        });\r\n                    };\r\n                });\r\n            });\r\n        };\r\n\r\n        this.put = function (...args) {\r\n            return this.update(...args);\r\n        };\r\n\r\n        this.remove = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.onerror = e => {\r\n                    // prevent throwing and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n                transaction.oncomplete = () => resolve(key);\r\n\r\n                const store = transaction.objectStore(table);\r\n                try {\r\n                    store.delete(key);\r\n                } catch (err) {\r\n                    reject(err);\r\n                }\r\n            });\r\n        };\r\n\r\n        this.delete = function (...args) {\r\n            return this.remove(...args);\r\n        };\r\n\r\n        this.clear = function (table) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                const transaction = db.transaction(table, transactionModes.readwrite);\r\n                transaction.onerror = e => reject(e);\r\n                transaction.onabort = e => reject(e);\r\n                transaction.oncomplete = () => resolve();\r\n\r\n                const store = transaction.objectStore(table);\r\n                store.clear();\r\n            });\r\n        };\r\n\r\n        this.close = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                db.close();\r\n                closed = true;\r\n                delete dbCache[name][version];\r\n                resolve();\r\n            });\r\n        };\r\n\r\n        this.get = function (table, key) {\r\n            return new Promise(function (resolve, reject) {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => {\r\n                    // prevent throwing and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n\r\n                let req;\r\n                try {\r\n                    req = store.get(key);\r\n                } catch (err) {\r\n                    reject(err);\r\n                }\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.count = function (table, key) {\r\n            return new Promise((resolve, reject) => {\r\n                if (closed) {\r\n                    reject(new Error('Database has been closed'));\r\n                    return;\r\n                }\r\n                try {\r\n                    key = mongoifyKey(key);\r\n                } catch (e) {\r\n                    reject(e);\r\n                    return;\r\n                }\r\n\r\n                const transaction = db.transaction(table);\r\n                transaction.onerror = e => {\r\n                    // prevent throwing and aborting (hard)\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                    e.preventDefault();\r\n                    reject(e);\r\n                };\r\n                transaction.onabort = e => reject(e);\r\n\r\n                const store = transaction.objectStore(table);\r\n                let req;\r\n                try {\r\n                    req = key == null ? store.count() : store.count(key);\r\n                } catch (err) {\r\n                    reject(err);\r\n                }\r\n                req.onsuccess = e => resolve(e.target.result);\r\n            });\r\n        };\r\n\r\n        this.addEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            if (eventName === 'error') {\r\n                db.addEventListener(eventName, function (e) {\r\n                    e.preventDefault(); // Needed by Firefox to prevent hard abort with ConstraintError\r\n                    handler(e);\r\n                });\r\n                return;\r\n            }\r\n            db.addEventListener(eventName, handler);\r\n        };\r\n\r\n        this.removeEventListener = function (eventName, handler) {\r\n            if (!serverEvents.includes(eventName)) {\r\n                throw new Error('Unrecognized event type ' + eventName);\r\n            }\r\n            db.removeEventListener(eventName, handler);\r\n        };\r\n\r\n        serverEvents.forEach(function (evName) {\r\n            this[evName] = function (handler) {\r\n                this.addEventListener(evName, handler);\r\n                return this;\r\n            };\r\n        }, this);\r\n\r\n        if (noServerMethods) {\r\n            return;\r\n        }\r\n\r\n        let err;\r\n        [].some.call(db.objectStoreNames, storeName => {\r\n            if (this[storeName]) {\r\n                err = new Error('The store name, \"' + storeName + '\", which you have attempted to load, conflicts with db.js method names.\"');\r\n                this.close();\r\n                return true;\r\n            }\r\n            this[storeName] = {};\r\n            const keys = Object.keys(this);\r\n            keys.filter(key => !(([...serverEvents, 'close', 'addEventListener', 'removeEventListener']).includes(key)))\r\n                .map(key =>\r\n                    this[storeName][key] = (...args) => this[key](storeName, ...args)\r\n                );\r\n        });\r\n        return err;\r\n    };\r\n\r\n    const createSchema = function (e, request, schema, db, server, version) {\r\n        if (!schema || schema.length === 0) {\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < db.objectStoreNames.length; i++) {\r\n            const name = db.objectStoreNames[i];\r\n            if (!hasOwn.call(schema, name)) {\r\n                // Errors for which we are not concerned and why:\r\n                // `InvalidStateError` - We are in the upgrade transaction.\r\n                // `TransactionInactiveError` (as by the upgrade having already\r\n                //      completed or somehow aborting) - since we've just started and\r\n                //      should be without risk in this loop\r\n                // `NotFoundError` - since we are iterating the dynamically updated\r\n                //      `objectStoreNames`\r\n                db.deleteObjectStore(name);\r\n            }\r\n        }\r\n\r\n        let ret;\r\n        Object.keys(schema).some(function (tableName) {\r\n            const table = schema[tableName];\r\n            let store;\r\n            if (db.objectStoreNames.contains(tableName)) {\r\n                store = request.transaction.objectStore(tableName); // Shouldn't throw\r\n            } else {\r\n                // Errors for which we are not concerned and why:\r\n                // `InvalidStateError` - We are in the upgrade transaction.\r\n                // `ConstraintError` - We are just starting (and probably never too large anyways) for a key generator.\r\n                // `ConstraintError` - The above condition should prevent the name already existing.\r\n                //\r\n                // Possible errors:\r\n                // `TransactionInactiveError` - if the upgrade had already aborted,\r\n                //      e.g., from a previous `QuotaExceededError` which is supposed to nevertheless return\r\n                //      the store but then abort the transaction.\r\n                // `SyntaxError` - if an invalid `table.key.keyPath` is supplied.\r\n                // `InvalidAccessError` - if `table.key.autoIncrement` is `true` and `table.key.keyPath` is an\r\n                //      empty string or any sequence (empty or otherwise).\r\n                try {\r\n                    store = db.createObjectStore(tableName, table.key);\r\n                } catch (err) {\r\n                    ret = err;\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            Object.keys(table.indexes || {}).some(function (indexKey) {\r\n                try {\r\n                    store.index(indexKey);\r\n                } catch (err) {\r\n                    let index = table.indexes[indexKey];\r\n                    index = index && typeof index === 'object' ? index : {};\r\n                    // Errors for which we are not concerned and why:\r\n                    // `InvalidStateError` - We are in the upgrade transaction and store found above should not have already been deleted.\r\n                    // `ConstraintError` - We have already tried getting the index, so it shouldn't already exist\r\n                    //\r\n                    // Possible errors:\r\n                    // `TransactionInactiveError` - if the upgrade had already aborted,\r\n                    //      e.g., from a previous `QuotaExceededError` which is supposed to nevertheless return\r\n                    //      the index object but then abort the transaction.\r\n                    // `SyntaxError` - If the `keyPath` (second argument) is an invalid key path\r\n                    // `InvalidAccessError` - If `multiEntry` on `index` is `true` and\r\n                    //                          `keyPath` (second argument) is a sequence\r\n                    try {\r\n                        store.createIndex(indexKey, index.keyPath || index.key || indexKey, index);\r\n                    } catch (err2) {\r\n                        ret = err2;\r\n                        return true;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        return ret;\r\n    };\r\n\r\n    const open = function (e, server, version, noServerMethods) {\r\n        const db = e.target.result;\r\n        dbCache[server][version] = db;\r\n\r\n        const s = new Server(db, server, version, noServerMethods);\r\n        return s instanceof Error ? Promise.reject(s) : Promise.resolve(s);\r\n    };\r\n\r\n    const db = {\r\n        version: '0.15.0',\r\n        open: function (options) {\r\n            let server = options.server;\r\n            let version = options.version || 1;\r\n            let schema = options.schema;\r\n            let noServerMethods = options.noServerMethods;\r\n\r\n            if (!dbCache[server]) {\r\n                dbCache[server] = {};\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                if (dbCache[server][version]) {\r\n                    open({\r\n                        target: {\r\n                            result: dbCache[server][version]\r\n                        }\r\n                    }, server, version, noServerMethods)\r\n                    .then(resolve, reject);\r\n                } else {\r\n                    if (typeof schema === 'function') {\r\n                        try {\r\n                            schema = schema();\r\n                        } catch (e) {\r\n                            reject(e);\r\n                            return;\r\n                        }\r\n                    }\r\n                    const request = indexedDB.open(server, version);\r\n\r\n                    request.onsuccess = e => open(e, server, version, noServerMethods).then(resolve, reject);\r\n                    request.onerror = e => {\r\n                        // Prevent default for `BadVersion` and `AbortError` errors, etc.\r\n                        // These are not necessarily reported in console in Chrome but present; see\r\n                        //  https://bugzilla.mozilla.org/show_bug.cgi?id=872873\r\n                        //  http://stackoverflow.com/questions/36225779/aborterror-within-indexeddb-upgradeneeded-event/36266502\r\n                        e.preventDefault();\r\n                        reject(e);\r\n                    };\r\n                    request.onupgradeneeded = e => {\r\n                        let err = createSchema(e, request, schema, e.target.result, server, version);\r\n                        if (err) {\r\n                            reject(err);\r\n                        }\r\n                    };\r\n                    request.onblocked = e => {\r\n                        const resume = new Promise(function (res, rej) {\r\n                            // We overwrite handlers rather than make a new\r\n                            //   open() since the original request is still\r\n                            //   open and its onsuccess will still fire if\r\n                            //   the user unblocks by closing the blocking\r\n                            //   connection\r\n                            request.onsuccess = (ev) => {\r\n                                open(ev, server, version, noServerMethods)\r\n                                    .then(res, rej);\r\n                            };\r\n                            request.onerror = e => rej(e);\r\n                        });\r\n                        e.resume = resume;\r\n                        reject(e);\r\n                    };\r\n                }\r\n            });\r\n        },\r\n\r\n        delete: function (dbName) {\r\n            return new Promise(function (resolve, reject) {\r\n                const request = indexedDB.deleteDatabase(dbName); // Does not throw\r\n\r\n                request.onsuccess = e => resolve(e);\r\n                request.onerror = e => reject(e); // No errors currently\r\n                request.onblocked = e => {\r\n                    // The following addresses part of https://bugzilla.mozilla.org/show_bug.cgi?id=1220279\r\n                    e = e.newVersion === null || typeof Proxy === 'undefined' ? e : new Proxy(e, {get: function (target, name) {\r\n                        return name === 'newVersion' ? null : target[name];\r\n                    }});\r\n                    const resume = new Promise(function (res, rej) {\r\n                        // We overwrite handlers rather than make a new\r\n                        //   delete() since the original request is still\r\n                        //   open and its onsuccess will still fire if\r\n                        //   the user unblocks by closing the blocking\r\n                        //   connection\r\n                        request.onsuccess = ev => {\r\n                            // The following are needed currently by PhantomJS: https://github.com/ariya/phantomjs/issues/14141\r\n                            if (!('newVersion' in ev)) {\r\n                                ev.newVersion = e.newVersion;\r\n                            }\r\n\r\n                            if (!('oldVersion' in ev)) {\r\n                                ev.oldVersion = e.oldVersion;\r\n                            }\r\n\r\n                            res(ev);\r\n                        };\r\n                        request.onerror = e => rej(e);\r\n                    });\r\n                    e.resume = resume;\r\n                    reject(e);\r\n                };\r\n            });\r\n        },\r\n\r\n        cmp: function (param1, param2) {\r\n            return new Promise(function (resolve, reject) {\r\n                try {\r\n                    resolve(indexedDB.cmp(param1, param2));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\r\n        module.exports = db;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () { return db; });\r\n    } else {\r\n        local.db = db;\r\n    }\r\n}(self));\r\n"]}
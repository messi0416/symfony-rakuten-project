<?php

namespace MiscBundle\Entity\Repository;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
use MiscBundle\Entity\ProductImagesVariation;
use MiscBundle\Util\DbCommonUtil;

/**
 * ProductImagesVariationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductImagesVariationRepository extends BaseRepository
{
  /**
   * SKU対応のカラー画像 1件取得
   * @param $neSyohinSyohinCode
   * @return ProductImagesVariation|null
   */
  public function findByNeSyohinSyohinCode($neSyohinSyohinCode)
  {
    $sql = <<<EOD
      SELECT
        pi.*
      FROM product_images_variation pi
      INNER JOIN tb_mainproducts m ON pi.daihyo_syohin_code = m.daihyo_syohin_code
                                  AND pi.code = m.カラー軸
      INNER JOIN tb_productchoiceitems pci ON m.daihyo_syohin_code = pci.daihyo_syohin_code
                                   AND (
                                      CASE
                                        WHEN pi.code = 'col' THEN (pi.variation_code = pci.colcode)
                                        WHEN pi.code = 'row' THEN (pi.variation_code = pci.rowcode)
                                        ELSE 0
                                      END
                                   )
      WHERE pci.ne_syohin_syohin_code = :neSyohinSyohinCode
      ORDER BY pi.variation_code
      LIMIT 1
EOD;
    /** @var EntityManager $em */
    $em = $this->getEntityManager();

    $rsm = new ResultSetMappingBuilder($em);
    $rsm->addRootEntityFromClassMetadata('MiscBundle:ProductImagesVariation', 'pi');

    $query = $em->createNativeQuery($sql, $rsm);
    $query->setParameter(':neSyohinSyohinCode', $neSyohinSyohinCode, \PDO::PARAM_STR);

    $result = $query->getResult();

    $image = null;
    if (count($result)) {
      $image = array_shift($result);
    }

    return $image;
  }

  /**
   * 一商品分 全件取得
   *
   * @param string $daihyoSyohinCode
   * @return Collection|\MiscBundle\Entity\ProductImagesVariation[]
   */
  public function findByDaihyoSyohinCode($daihyoSyohinCode)
  {
    $sql = <<<EOD
      SELECT
        pi.*
      FROM product_images_variation pi
      INNER JOIN tb_mainproducts m ON pi.daihyo_syohin_code = m.daihyo_syohin_code
                                  AND pi.code = m.カラー軸
      WHERE pi.daihyo_syohin_code = :daihyoSyohinCode
      ORDER BY pi.variation_code
EOD;

    /** @var EntityManager $em */
    $em = $this->getEntityManager();

    $rsm = new ResultSetMappingBuilder($em);
    $rsm->addRootEntityFromClassMetadata('MiscBundle:ProductImagesVariation', 'pi');

    $query = $em->createNativeQuery($sql, $rsm);
    $query->setParameter(':daihyoSyohinCode', $daihyoSyohinCode, \PDO::PARAM_STR);

    return $query->getResult();
  }


  /**
   * Yahoo系モール用に、バリエーション画像新規登録対象のデータを取得する。
   *
   * @param String $target モールコード(plusnao|kawaemon|otoriyose)
   */
  public function findYahooUploadImage($target)
  {
    /** @var DbCommonUtil $commonUtil */
    $commonUtil = $this->getContainer()->get('misc.util.db_common');
    $targetTable = $commonUtil->getYahooTargetTableName($target);
    $productStockTable = $commonUtil->getYahooProductStockTableName($target);

    $sql = <<<EOD
        SELECT pci.daihyo_syohin_code, pci.ne_syohin_syohin_code, v.directory, v.filename
        FROM {$targetTable} i
        JOIN tb_productchoiceitems pci ON i.daihyo_syohin_code = pci.daihyo_syohin_code
        JOIN {$productStockTable} ps ON pci.ne_syohin_syohin_code = ps.`sub-code`
        JOIN tb_mainproducts m ON i.daihyo_syohin_code = m.daihyo_syohin_code
        JOIN (
          SELECT pci2.daihyo_syohin_code,
                 CASE m.カラー軸
                   WHEN 'row' THEN pci2.colcode
                   WHEN 'col' THEN pci2.rowcode
                   ELSE ''
                 END as othercode
          FROM tb_productchoiceitems pci2
          JOIN tb_mainproducts m ON m.daihyo_syohin_code = pci2.daihyo_syohin_code
          AND pci2.並び順No = (SELECT MIN(並び順No) FROM tb_productchoiceitems pci3 WHERE pci2.daihyo_syohin_code = pci3.daihyo_syohin_code)
        ) firstcode ON pci.daihyo_syohin_code = firstcode.daihyo_syohin_code
            AND
              CASE m.カラー軸
              WHEN 'row' THEN pci.colcode = firstcode.othercode
              WHEN 'col' THEN pci.rowcode = firstcode.othercode
              ELSE ''
            END
        JOIN product_images_variation v ON pci.daihyo_syohin_code = v.daihyo_syohin_code
            AND
              CASE m.カラー軸
              WHEN 'row' THEN pci.rowcode = v.variation_code
              WHEN 'col' THEN pci.colcode = v.variation_code
              ELSE ''
            END
        WHERE i.variation_image_upload_flg <> 0
            AND (variation_image_upload_date IS NULL OR variation_image_upload_date < v.updated)
        ORDER BY i.daihyo_syohin_code
EOD;

    /** @var EntityManager $em */
    $em = $this->getEntityManager();

    $rsm = new ResultSetMappingBuilder($em);
    $rsm->addScalarResult('daihyo_syohin_code', 'daihyo_syohin_code', 'string');
    $rsm->addScalarResult('ne_syohin_syohin_code', 'ne_syohin_syohin_code', 'string');
    $rsm->addScalarResult('directory', 'directory', 'string');
    $rsm->addScalarResult('filename', 'filename', 'string');

    $query = $em->createNativeQuery($sql, $rsm);
    return $query->getResult();
  }
}

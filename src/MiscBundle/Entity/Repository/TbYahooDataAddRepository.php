<?php

namespace MiscBundle\Entity\Repository;

/**
 * TbYahooDataAddRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TbYahooDataAddRepository extends BaseRepository
{
  // spec1~10 に値を設定する処理を簡易化させるための設定値
  const SPEC_TYPE_SIZE = 1;
  const SPEC_TYPE_COLOR = 2;
  const SPEC_TYPE_OTHER = 9;

  /**
   * YahooCSVのspecにスペックIDとスペック値IDを設定する(サイズ用)
   * spec1: サイズ（S/M/L）、 spec2: サイズ（身長）、 spec3: サイズ(cm)
   * csvのspecフォーマット spec_id | spec_value_id1:spec_value_id2: ~
   * @throws \Doctrine\DBAL\DBALException
   */
  public function applySizeSpec ()
  {
    $sql = <<<EOD
        UPDATE tb_yahoo_data_add da
          INNER JOIN (
            SELECT
              T1.code, 
              /* code       | spec                  | spec_name 
                 'aaa-0001' | '24181|260936'        | 'サイズ（S/M/L）'
                 'aaa-0001' | '15333|104103:104104' | 'サイズ（身長）'
                T1で上記のように取得されるので、spec1~3に該当するようにcodeで集約し一行にまとめる */
              GROUP_CONCAT(IF(T1.spec_name = 'サイズ（S/M/L）', T1.spec, NULL)) AS spec1,
              GROUP_CONCAT(IF(T1.spec_name = 'サイズ（身長）', T1.spec, NULL)) AS spec2,
              GROUP_CONCAT(IF(T1.spec_name = 'サイズ(cm)', T1.spec, NULL)) AS spec3
            FROM (
              SELECT 
                  a.code,
                  CONCAT(s.spec_id, '|', GROUP_CONCAT(DISTINCT s.spec_value_id SEPARATOR ':')) AS spec,
                  GROUP_CONCAT(DISTINCT s.spec_name) AS spec_name
                FROM tb_yahoo_data_add a
                INNER JOIN tb_mainproducts m ON a.code = m.daihyo_syohin_code
                INNER JOIN tb_productchoiceitems c ON m.daihyo_syohin_code = c.daihyo_syohin_code
                INNER JOIN tb_yahoo_product_spec_code s ON m.`YAHOOディレクトリID` = s.yahoo_id 
                AND s.spec_value_name_removed_suffix = REPLACE(CASE m.`カラー軸` 
                  WHEN 'row' THEN c.colname
                  WHEN 'col' THEN c.rowname
                  ELSE ''
                END, 'cm', '') /* cmを除く完全一致 */
                AND s.spec_type = :spec_type
              GROUP BY a.code, s.spec_name
            ) T1
            GROUP BY T1.code
          ) T2 ON da.code = T2.code
        SET 
          da.spec1 = T2.spec1,
          da.spec2 = T2.spec2,
          da.spec3 = T2.spec3
EOD;
    $dbMain = $this->getConnection('main');
    $stmt = $dbMain->prepare($sql);
    $stmt->bindValue(':spec_type', self::SPEC_TYPE_SIZE, \PDO::PARAM_INT);
    $stmt->execute();
  }

  /**
   * YahooCSVのspec用にスペックIDとスペック値IDを設定する(カラー用)
   * spec4: 色
   * フォーマット spec_id | spec_value_id1:spec_value_id2: ~
   * @throws \Doctrine\DBAL\DBALException
   */
  public function applyColorSpec ()
  {
    $sql = <<<EOD
        UPDATE tb_yahoo_data_add data_add
        INNER JOIN (
          SELECT 
            main.daihyo_syohin_code,
            CONCAT(spec.spec_id, '|', GROUP_CONCAT(DISTINCT color.yahoo_spec_value_id SEPARATOR ':')) AS spec4
          FROM tb_mainproducts main
          INNER JOIN tb_productchoiceitems choice
            ON main.daihyo_syohin_code = choice.daihyo_syohin_code
          INNER JOIN tb_productchoiceitems_color color 
            ON choice.ne_syohin_syohin_code = color.ne_syohin_syohin_code
          INNER JOIN tb_yahoo_product_spec_code spec 
            ON main.`YAHOOディレクトリID` = spec.yahoo_id 
              AND spec.spec_type = :spec_type
          GROUP BY main.daihyo_syohin_code
        ) T 
          ON data_add.code = T.daihyo_syohin_code
        SET data_add.spec4 = T.spec4
EOD;
    $dbMain = $this->getConnection('main');
    $stmt = $dbMain->prepare($sql);
    $stmt->bindValue(':spec_type', self::SPEC_TYPE_COLOR, \PDO::PARAM_INT);
    $stmt->execute();
  }
}

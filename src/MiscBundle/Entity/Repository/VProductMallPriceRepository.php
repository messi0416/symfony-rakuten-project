<?php

namespace MiscBundle\Entity\Repository;

use Doctrine\ORM\Query\ResultSetMappingBuilder;
use forestlib\Doctrine\ORM\LimitableNativeQuery;

/**
 * VProductMallPriceRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VProductMallPriceRepository extends BaseRepository
{
  /**
   * 全データ取得
   * ※出品フラグ ON のみ
   * ※フリー在庫 > 0 のみ
   * @return array
   */
  public function getAll()
  {
    $dbMain = $this->getConnection('main');

    $sql = <<<EOD
      SELECT
          m.daihyo_syohin_code
        , m.sire_code
        , m.価格非連動チェック   AS original_price_flg
        , cal.pricedown_flg
        , cal.baika_tnk
        , cal.base_baika_tanka
        , isl.registration_flg AS shoplist_registration_flg
        , isl.baika_tanka      AS shoplist_price
        , isl.original_price   AS shoplist_original_price
        , isl.current_price    AS shoplist_current_price
        , ir.original_price    AS rakuten_original_price
        , ir.baika_tanka       AS rakuten_price
        , CASE
            WHEN isl.current_price > 0 AND isl.baika_tanka > 0 THEN TRUNCATE(isl.current_price / isl.baika_tanka * 100, 0)
            ELSE 0
          END AS diff_rate
        , CASE
             WHEN CHAR_LENGTH(m.picfolderP1) > 0 AND CHAR_LENGTH(m.picnameP1) > 0 THEN CONCAT(m.picfolderP1, '/', m.picnameP1)
             ELSE ''
          END AS picture
      FROM tb_mainproducts m
      INNER JOIN tb_mainproducts_cal       cal ON m.daihyo_syohin_code = cal.daihyo_syohin_code
      INNER JOIN tb_shoplist_information   isl ON m.daihyo_syohin_code = isl.daihyo_syohin_code
      INNER JOIN tb_rakuteninformation     ir  ON m.daihyo_syohin_code = ir.daihyo_syohin_code
      INNER JOIN (
        SELECT
            pci.daihyo_syohin_code
          , SUM(pci.フリー在庫数) AS stock
        FROM tb_productchoiceitems pci
        GROUP BY pci.daihyo_syohin_code
        HAVING stock > 0
      ) T ON m.daihyo_syohin_code = T.daihyo_syohin_code
      WHERE isl.registration_flg <> 0
        AND EXISTS (
          SELECT
            *
          FROM tb_productchoiceitems pci
          INNER JOIN tb_shoplist_product_stock ps ON pci.ne_syohin_syohin_code = ps.sku
          WHERE m.daihyo_syohin_code = pci.daihyo_syohin_code
        )
EOD;
    $stmt = $dbMain->query($sql);

    return $stmt->fetchAll(\PDO::FETCH_ASSOC);
  }


  /**
   * 一覧データ取得
   * @param array $conditions
   * @param array $orders
   * @param int $limit
   * @param int $page
   * @return \Knp\Bundle\PaginatorBundle\Pagination\SlidingPagination
   */
  public function getList($conditions = [], $orders = [], $limit = 100, $page = 1)
  {
    $em = $this->getEntityManager();

    $sqlSelect = <<<EOD
      SELECT
          m.daihyo_syohin_code
        , m.sire_code
        , m.daihyo_syohin_name
        , m.価格非連動チェック   AS original_price_flg
        , cal.pricedown_flg
        , cal.baika_tnk
        , cal.base_baika_tanka
        , isl.registration_flg AS shoplist_registration_flg
        , isl.baika_tanka      AS shoplist_price
        , isl.original_price   AS shoplist_original_price
        , isl.current_price    AS shoplist_current_price
        , ir.original_price    AS rakuten_original_price
        , ir.baika_tanka       AS rakuten_price
EOD;

    $sqlBody = <<<EOD
      FROM tb_mainproducts m
      INNER JOIN tb_mainproducts_cal     cal ON m.daihyo_syohin_code = cal.daihyo_syohin_code
      INNER JOIN tb_shoplist_information isl ON m.daihyo_syohin_code = isl.daihyo_syohin_code
      INNER JOIN tb_rakuteninformation   ir  ON m.daihyo_syohin_code = ir.daihyo_syohin_code
EOD;

    $rsm = new ResultSetMappingBuilder($em);
    $rsm->addRootEntityFromClassMetadata('MiscBundle:VProductMallPrice', 'p');

    $query = LimitableNativeQuery::createQuery($em, $rsm, $sqlSelect, $sqlBody);
    $query->setOrders($orders);
//    $query->setParameter(':deliveryTypeMailbinKomi', DbCommonUtil::DELIVERY_TYPE_MAILBIN_KOMI);
//    $query->setParameter(':deliveryTypeTeikeigaiKomi', DbCommonUtil::DELIVERY_TYPE_TEIKEIGAI_KOMI);

    /** @var \Knp\Component\Pager\Paginator $paginator */
    $paginator = $this->getContainer()->get('knp_paginator');
    /** @var \Knp\Bundle\PaginatorBundle\Pagination\SlidingPagination $pagination */
    $pagination = $paginator->paginate(
      $query /* query NOT result */
      , $page
      , $limit
    );

    return $pagination;
  }

}

<?php

namespace MiscBundle\Entity\Repository;

use MiscBundle\Entity\TbSetting;
use MiscBundle\Exception\ValidationException;

/**
 * TbSettingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TbSettingRepository extends BaseRepository
{
    /**
     * Yahooお取り寄せ設定で利用する設定値を取得し、TbSettingクラスの配列で返却する。
     * 該当の設定がない場合は空の配列を返却する。
     */
    public function findCsvYahooOtoriyoseSetting() {

        // キーを配列化
        $keys = array(TbSetting::KEY_YAHOO_OTORIYOSE_PR_AMOUNT_DAYS,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_AMOUNT_NUM,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_AMOUNT_PER,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_READY_PER,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_NEW_DAYS,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_NEW_PER,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_OFF_PER,
            TbSetting::KEY_YAHOO_OTORIYOSE_PR_OTHER_PER);

        $qb = $this->createQueryBuilder('s');
        $qb->andWhere($qb->expr()->in('s.settingKey', $keys));
        return $qb->getQuery()->getResult();
    }

    /**
     * Yahooお取り寄せ設定で利用する設定値を、キーと値のみの連想配列にして返却する。
     * 該当の設定がない場合は空の配列を返却する。
     */
    public function findCsvYahooOtoriyoseSettingByArray() {

      /** @var BatchLogger $logger */
      $logger = $this->getContainer()->get('misc.util.batch_logger');

      $settings = $this->findCsvYahooOtoriyoseSetting();
      $settingsArray = array();
      foreach($settings as $setting) {
        $settingsArray[$setting->getSettingKey()] = $setting->getSettingVal();
      }
      return $settingsArray;
    }

    /**
     * @param array $settingArray
     */
    public function updateSettings($settingArray) {
      foreach($settingArray as $key => $val) {
        $setting = $this->find($key);
        if ($setting === null) {
          throw new ValidationException('不明な設定キーが指定されました。');
        }
        $setting->setSettingVal($val);
      }
      $this->getEntityManager()->flush();
    }

    /**
     * 各モールで利用する設定値を、キーと値のみの連想配列にして返却する。
     * 該当の設定がない場合は空の配列を返却する。
     * 現在は Yahoo kawaemon と 楽天 motto-motto と 楽天 LaForest が対応
     * @param $mall 'kawaemon'|'motto'|'laforest'
     */
    public function findUnpublishedPageSettingByArray($mall) {
      switch ($mall) {
        case 'kawaemon':
          $keys = [
            TbSetting::KEY_YAHOO_KAWA_E_MON_QUANTITY,
            TbSetting::KEY_YAHOO_KAWA_E_MON_QUANTITY_DAYS,
            TbSetting::KEY_YAHOO_KAWA_E_MON_SALES,
            TbSetting::KEY_YAHOO_KAWA_E_MON_SALES_DAYS,
          ];
          break;
        case 'motto':
          $keys = [
            TbSetting::KEY_MOTTO_QUANTITY,
            TbSetting::KEY_MOTTO_QUANTITY_DAYS,
            TbSetting::KEY_MOTTO_SALES,
            TbSetting::KEY_MOTTO_SALES_DAYS,
          ];
          break;
        case 'laforest':
          // 現時点ではmottoとlaforestは同一キー
          $keys = [
            TbSetting::KEY_MOTTO_QUANTITY,
            TbSetting::KEY_MOTTO_QUANTITY_DAYS,
            TbSetting::KEY_MOTTO_SALES,
            TbSetting::KEY_MOTTO_SALES_DAYS,
            TbSetting::KEY_LAFOREST_REVIEW_POINT,
          ];
          break;
        default:
          return [];
      }

      $qb = $this->createQueryBuilder('s');
      $qb->andWhere($qb->expr()->in('s.settingKey', $keys));
      $settings = $qb->getQuery()->getResult();
      $settingsArray = [];
      foreach($settings as $setting) {
        $settingsArray[$setting->getSettingKey()] = $setting->getSettingVal();
      }
      return $settingsArray;
    }

    /**
     * 楽天GOLD CSV出力で利用する設定値を取得し、キーと値のみの連想配列にして返却する。
     * 該当の設定がない場合は空の配列を返却する。
     */
    public function findRakutenGoldSetting() {
        $keys = [
            TbSetting::KEY_RAKUTEN_GOLD_AGGREGATE_DAYS,
            TbSetting::KEY_RAKUTEN_GOLD_MIN_REVIEW_POINT,
            TbSetting::KEY_RAKUTEN_GOLD_MAX_PETIT_PRICE,
        ];
        $qb = $this->createQueryBuilder('s');
        $qb->andWhere($qb->expr()->in('s.settingKey', $keys));
        $settings = $qb->getQuery()->getResult();
        $settingsArray = [];
        foreach($settings as $setting) {
          $settingsArray[$setting->getSettingKey()] = $setting->getSettingVal();
        }
        return $settingsArray;
    }
}

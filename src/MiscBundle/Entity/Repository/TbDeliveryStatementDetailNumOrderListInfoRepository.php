<?php

namespace MiscBundle\Entity\Repository;

/**
 * TbDeliveryStatementDetailNumOrderListInfoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TbDeliveryStatementDetailNumOrderListInfoRepository extends BaseRepository
{
  const STATEMENT_DETAIL_PRODUCT_NUM_LIST_BORDER_DETAIL_NUM = 1;
  const STATEMENT_DETAIL_PRODUCT_NUM_LIST_PAGE_ITEM_NUM = 40; // デフォルト値

  const SHIPPING_IMPOSSIBLE_WAREHOUSE_ID = 999999; // 出荷不能伝票を結果テーブルにまとめて置くための仮倉庫ID

  const SETTING_ID = 1;
  const SETTING_ID_SHOPLIST = 2;
  const SETTING_ID_ASSIGNED_ALL = 3;

  /**
   * 検索条件取得
   * ※Entity未作成でのController処理の写し。直SQL
   * @param int $settingId
   * @return array
   * @throws \Doctrine\DBAL\DBALException
   */
  public function getSettingInfo($settingId = null)
  {
    if (!$settingId) {
      $settingId = self::SETTING_ID;
    }

    /** @var \Doctrine\DBAL\Connection $dbMain */
    $dbMain = $this->getConnection('main');
    $sql = <<<EOD
      SELECT
          shipping_date
        , page_item_num
        , account_name
        , update_number
        , last_updated
      FROM tb_delivery_statement_detail_num_order_list_info i
      WHERE i.id = :settingId
EOD;
    $stmt = $dbMain->prepare($sql);
    $stmt->bindValue(':settingId', $settingId, \PDO::PARAM_INT);
    $stmt->execute();
    $info = $stmt->fetch(\PDO::FETCH_ASSOC);
    $info = $info ? $info : [];

    $result = [
      'shipping_date' => isset($info['shipping_date']) ? (new \DateTime($info['shipping_date']))->setTime(0, 0, 0) : (new \DateTime())->setTime(0, 0, 0)
      , 'page_item_num' => isset($info['page_item_num']) ? $info['page_item_num'] : TbDeliveryStatementDetailNumOrderListInfoRepository::STATEMENT_DETAIL_PRODUCT_NUM_LIST_PAGE_ITEM_NUM
      , 'account_name'  => isset($info['account_name'])  ? $info['account_name']  : ''
      , 'update_number' => isset($info['update_number']) ? $info['update_number'] : 1
      , 'last_updated'  => isset($info['last_updated'])  ? new \DateTime($info['last_updated']) : null
    ];

    return $result;
  }

  /**
   * 検索条件保存
   * ※Entity未作成でのController処理の写し。直SQL
   * @param $info
   * @param int $settingId
   * @throws \Doctrine\DBAL\DBALException
   */
  public function updateSettingInfo($info, $settingId = null)
  {
    if (!$settingId) {
      $settingId = self::SETTING_ID;
    }

    /** @var \Doctrine\DBAL\Connection $dbMain */
    $dbMain = $this->getConnection('main');
    $sql = <<<EOD
      INSERT INTO tb_delivery_statement_detail_num_order_list_info (
          id
        , shipping_date
        , page_item_num
        , account_name
        , update_number
        , last_updated
      ) VALUES (
          :settingId
        , :shippingDate
        , :pageItemNum
        , :accountName
        , :updateNumber
        , :lastUpdated
      )
      ON DUPLICATE KEY UPDATE
          shipping_date = VALUES(shipping_date)
        , page_item_num = VALUES(page_item_num)
        , account_name  = VALUES(account_name)
        , update_number = VALUES(update_number)
        , last_updated  = VALUES(last_updated)
EOD;
    $stmt = $dbMain->prepare($sql);
    $stmt->bindValue(':settingId', $settingId);

    /** @var \DateTime $shippingDate */
    $shippingDate = isset($info['shipping_date']) ? $info['shipping_date'] : null;
    /** @var \DateTime $lastUpdated */
    $lastUpdated = isset($info['last_updated']) ? $info['last_updated'] : null;

    $stmt->bindValue(':shippingDate', $shippingDate                 ? $shippingDate->format('Y-m-d') : null);
    $stmt->bindValue(':pageItemNum' , isset($info['page_item_num']) ? $info['page_item_num'] : TbDeliveryStatementDetailNumOrderListInfoRepository::STATEMENT_DETAIL_PRODUCT_NUM_LIST_PAGE_ITEM_NUM);
    $stmt->bindValue(':accountName' , isset($info['account_name'])  ? $info['account_name'] : '');
    $stmt->bindValue(':updateNumber', isset($info['update_number']) ? $info['update_number'] : 1);
    $stmt->bindValue(':lastUpdated' , $lastUpdated                  ? $lastUpdated->format('Y-m-d H:i:s') : null);
    $stmt->execute();
  }



}

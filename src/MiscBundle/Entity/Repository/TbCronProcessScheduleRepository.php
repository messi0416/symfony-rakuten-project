<?php

namespace MiscBundle\Entity\Repository;

use MiscBundle\Entity\TbCronProcessSchedule;

/**
 * TbCronProcessScheduleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TbCronProcessScheduleRepository extends BaseRepository
{
  const TYPE_IMPORT_STOCK = 'import_stock';
  const TYPE_WAREHOSE_BOX_MOVE_SETTING = 'warehouse_box_move_setting';

  const CODE_IMPORT_STOCK_YABUYOSHI = 'IMPORT_STOCK_YABUYOSHI';
  const CODE_IMPORT_STOCK_FBA = 'IMPORT_STOCK_FBA';
  const CODE_IMPORT_STOCK_RSL = 'IMPORT_STOCK_RSL';
  const CODE_IMPORT_STOCK_SHOPLIST = 'IMPORT_STOCK_SHOPLIST';

  const CODE_WAREHOSE_BOX_MOVE_SETTING = 'WAREHOSE_BOX_MOVE_SETTING';

  const CODE_ORDER_LIST_SETTING_SUNDAY = 'ORDER_LIST_SETTING_SUNDAY';
  const CODE_ORDER_LIST_SETTING_MONDAY = 'ORDER_LIST_SETTING_MONDAY';
  const CODE_ORDER_LIST_SETTING_TUESDAY = 'ORDER_LIST_SETTING_TUESDAY';
  const CODE_ORDER_LIST_SETTING_WEDNESDAY = 'ORDER_LIST_SETTING_WEDNESDAY';
  const CODE_ORDER_LIST_SETTING_THURSDAY = 'ORDER_LIST_SETTING_THURSDAY';
  const CODE_ORDER_LIST_SETTING_FRIDAY = 'ORDER_LIST_SETTING_FRIDAY';
  const CODE_ORDER_LIST_SETTING_SATURDAY = 'ORDER_LIST_SETTING_SATURDAY';

  public static $IMPORT_STOCK_CODE_LIST = [
    TbCronProcessScheduleRepository::CODE_IMPORT_STOCK_YABUYOSHI
  , TbCronProcessScheduleRepository::CODE_IMPORT_STOCK_FBA
  , TbCronProcessScheduleRepository::CODE_IMPORT_STOCK_RSL
  , TbCronProcessScheduleRepository::CODE_IMPORT_STOCK_SHOPLIST
  ];

  public static $WAREHOSE_BOX_MOVE_SETTING = [
    TbCronProcessScheduleRepository::CODE_WAREHOSE_BOX_MOVE_SETTING
  ];
  
  public static $ORDER_LIST_SETTING_LIST = [
    TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_SUNDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_MONDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_TUESDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_WEDNESDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_THURSDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_FRIDAY
    , TbCronProcessScheduleRepository::CODE_ORDER_LIST_SETTING_SATURDAY
  ];

  /**
   * @param $codeList
   * @return TbCronProcessSchedule[]
   */
  public function findByCodeList($codeList)
  {
    $qb = $this->createQueryBuilder('s');
    $qb->andWhere($qb->expr()->in('s.code', $codeList));
    /** @var TbCronProcessSchedule[] $schedules */
    $schedules = $qb->getQuery()->getResult();

    $result = [];
    foreach($codeList as $code) {
      $match = array_filter($schedules, function($schedule) use ($code) {
        /** @var TbCronProcessSchedule $schedule */
        return $schedule->getCode() === $code;
      });
      if ($match) {
        $result[$code] = array_shift($match);
      }
    }

    return $result;
  }

  /**
   * @return TbCronProcessSchedule[]
   */
  public function findStockImportCodeList()
  {
    return $this->findByCodeList(self::$IMPORT_STOCK_CODE_LIST);
  }

  public function  findExternalWarehouseBoxMoveSetting() {
      return $this->findByCodeList(self::$WAREHOSE_BOX_MOVE_SETTING);
  }

  public function  findOrderListSetting() {
      return $this->findByCodeList(self::$ORDER_LIST_SETTING_LIST);
  }

}
